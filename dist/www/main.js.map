{"version":3,"file":"main.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./assets/evt.js","webpack:///./assets/object.js","webpack:///./assets/throttle.js","webpack:///./src/field.js","webpack:///./src/index.js","webpack:///./src/model.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * 创建一个订阅管理对象\n * @class Evt\n * @constructor\n */\nfunction Evt() {\n}\nEvt.prototype={\n    /**\n     * 订阅\n     * @param  {string} key 订阅名称\n     * @param  {function} fn 触发的方法\n     * @returns {Evt}\n     */\n    subscribe: function (key, fn) {\n        this[key]||( this[key]=[]);\n        this[key].push(fn);\n        return this;\n    },\n    /**\n     * 触发\n     * @params {string} 订阅名称\n     * @args {*...} 触发事件需传递的参数\n     * @returns {Evt}\n     */\n    trigger: function (key,...args) {\n        let len, fns;\n        fns = this[key];\n        for (len = fns ? fns.length : 0; len--;) {\n            fns[len].apply(undefined, args);\n        }\n        return this;\n    },\n    /**\n     * 移除某个订阅\n     * @param key\n     * @param fn\n     * @returns {Evt}\n     */\n    remove: function( key, fn ){\n        let fns = this[key], len;\n        if(!fns||!fn){\n            !fn&&(fns = []);\n            return this;\n        }\n        for (len = fns.length; len--;) {\n            fn === fns[len] && fns.splice(i=len, 1);\n        }\n        return this;\n    }\n};\nEvt.prototype.constructor=Evt;\nmodule.exports= Evt;\n","/**\n * object 对象相关操作\n * @module Object\n */\n\n/**\n * 将sourceObj中的属性拷贝到destObj中，如果destObj中属性存在则不拷贝\n * @param destObj\n * @param sourceObj\n * @return {Object}\n */\nmodule.exports.copyIfNotExist = function (destObj, sourceObj) {\n    let idx;\n    destObj || (destObj = {});\n    for (idx in sourceObj) {\n        destObj[idx] === undefined && (destObj[idx] = sourceObj[idx])\n    }\n    return destObj;\n};\n/**\n * 判断是给定的参数否为数组\n * @param arg\n */\n\n// export function isArray(arg) {\n//     return Array.isArray ? Array.isArray(arg) : Object.prototype.toString.call(arg) === \"[object Array]\"\n// }\n\n/**\n *\n * @param obj\n * @param flag\n * @return {boolean}\n */\nmodule.exports.has = function (obj, flag) {\n    for (let i in obj) {\n        if (flag === obj[i]) return true;\n    }\n    return false;\n};\nmodule.exports.notAll = function (obj, flag) {\n    for (let i in obj) {\n        if (flag !== obj[i]) return true;\n    }\n    return false;\n};\n","/**\n *\n * @param fn\n * @param delay\n * @param opt\n * @param mode\n * @returns {retFn}\n * @private\n */\nfunction _throttle_(fn, delay = 1000, opt, mode) {\n    if (typeof delay === \"object\") {\n        opt   = delay;\n        delay = opt.delay || 1000;\n    }\n    let {immediate, leave, promise} = opt || {};\n    let timer, t                    = 0, p, pres, prej, args;\n\n    function _timer_(ctx, res, rej) {\n        if (!mode && timer) return;\n        mode && timer && clearTimeout(timer);\n        prej  = rej;\n        pres  = res;\n        timer = setTimeout(() => {\n            if (!timer) return;\n            promise ? pres(fn.apply(ctx, args)) : fn.apply(ctx, args);\n            timer = undefined;\n            pres  = prej = p = undefined;\n            t     = Date.now();\n        }, delay);\n    }\n\n    function retFn() {\n        if (!timer || !leave) args = arguments;\n        if (!timer && Date.now() - t > delay && immediate) {\n            t = Date.now();\n            return promise ? Promise.resolve(fn.apply(this, args)) : fn.apply(this, args);\n        }\n        (!p && promise) ? p = new Promise((res, rej) => _timer_(this, res, rej))\n            : _timer_(this, pres, prej);\n        return p;\n    }\n\n    retFn.clear = () => {\n        clearTimeout(timer) || (timer = undefined);\n        pres = p = undefined;\n        prej && prej(\"$rej$\");\n        prej = undefined;\n        t    = 0;\n        return retFn;\n    };\n    return retFn;\n}\n\n/**\n *\n * @param fn\n * @param {number} [delay=1000]\n * @param {object} [opt]\n * @returns {Function}\n */\nmodule.exports.throttle = function throttle(fn, delay, opt) {\n    return _throttle_(fn, delay, opt, 0)\n};\n\n/**\n *\n * @param fn\n * @param {number} [delay=1000]\n * @param {object} [opt]\n * @returns {Function}\n */\nmodule.exports.debounce = function (fn, delay, opt) {\n    return _throttle_(fn, delay, opt, 1);\n};\n","let Evt      = require(\"../assets/evt\");\nlet debounce = require(\"../assets/throttle\").debounce;\n\n/**\n *\n * @param initVal\n * @constructor\n */\nfunction Destor(initVal) {\n    let value = initVal;\n    this.get  = () => value;\n    this.set  = function (newValue) {\n        let isMod = Array.isArray(newValue) ? wrapArr.isDiff(newValue, value) : value !== newValue;\n        if (!isMod) return value;\n        this.emit(\"valueChg\", newValue, value, this);\n        this.ref && this.ref.emit(\"fieldValueChg\", this.name, newValue, value);\n        if (!Array.isArray(newValue) && this.isModified !== (newValue !== initVal)) {\n            this.isModified = !this.isModified;\n            this.emit(\"modChg\", this.isModified);\n            this.ref && this.emit(\"fieldModChg\", this.name, this.isModified);\n        }\n        value = newValue;\n        Array.isArray(value) || this.validate();//数组另处理\n        return value;\n        // if(this.$isValid===undefined)this.$validate();\n    };\n}\n\n\nlet wrapArr = (function () {\n    const arrayProto = Array.prototype;\n    const wrapProto  = Object.create(arrayProto);\n    [\n        \"push\",\n        \"pop\",\n        \"shift\",\n        \"unshift\",\n        \"splice\",\n        \"sort\",\n        \"reverse\"\n    ].forEach(method => {\n        let m             = arrayProto[method];\n        wrapProto[method] = function mutator() {\n            let _arr_ = [...this];\n            let $ctx  = this.$ctx;\n            m.apply(this, arguments);\n            // this.$ctx.$ref[this.$ctx.$name]=this;\n            $ctx.emit(\"valueChg\", this, _arr_, $ctx);\n            $ctx.ref && $ctx.ref.emit(\"fieldValueChg\", $ctx.name, this);\n        };\n    });\n    let _valChgHandler_ = function (initVal, val, ctx) {\n        // let ctx=nval.$ctx;\n        ctx.validate(val);\n        let isMod = _wrapArr_.isDiff(initVal, val);\n        if (isMod === ctx.isModified) return;\n        ctx.isModified = isMod;\n        ctx.emit(\"modChg\", isMod);\n        ctx.ref && ctx.ref.emit(\"fieldModChg\", ctx.name, isMod);\n    };\n\n    // _valChgHandler_.promiseble(false);\n    function _wrapArr_(initVal = [], ctx) {\n        let _val_       = [...initVal];\n        _val_.__proto__ = wrapProto;\n        Object.defineProperty(_val_, \"$ctx\", {value: ctx});\n        ctx.on(\"valueChg\", (newVal, preVal, ctx) => _valChgHandler_(initVal, newVal, ctx));\n        return _val_;\n    }\n\n    _wrapArr_.isDiff = function (a1, a2) {\n        // if (a1 === a2) return false;\n        if ((a1 && !a2) || (!a1 || a2) || a1.length !== a2.length) return true;\n        for (let i = 0, n = a1.length; i < n; i++)\n            if (!a2.includes(a1[i])) return true;\n        return false;\n    };\n    return _wrapArr_;\n})();\n\n\n/**\n * generate a Field Type\n * @param conf 字段属性配置\n * @return {F}\n * @constructor\n */\nfunction __(isValid) {\n    let flag     = this.isValid !== isValid;\n    this.isValid = isValid;\n    if (flag) {\n        this.emit(\"validChg\", isValid);\n        this.ref && this.ref.emit(\"fieldValidChg\", this.name, isValid);\n    }\n    return isValid;\n}\n\nfunction FieldPrototype({name, alias, desc, validator, defaultValue, required}) {\n    this.name         = name;\n    this.alias        = alias;\n    this.desc         = desc;\n    this.validator    = validator;\n    this.defaultValue = defaultValue;\n    this.required     = !!required;\n    return this;\n}\n\n/**\n *\n */\nFieldPrototype.prototype.isField = true;\n\nFieldPrototype.prototype.validate = function () {\n    let val       = this.value;\n    let isValid   = undefined;\n    let validator = this.validator;\n    if (val === this.defaultValue || (Array.isArray(val) && !wrapArr.isDiff(val, this.defaultValue))) {\n        isValid = true;\n    } else if (val === undefined || val === \"\") {\n        isValid = !this.required;\n    } else {\n        isValid = typeof validator === \"function\" ? this.validator(val) : validator && this.validator.test(val);\n    }\n    isValid = isValid && isValid.then ? isValid : Promise.resolve(isValid);\n    return isValid;\n};\nFieldPrototype.prototype.on       = function () {\n    this.evt || (this.evt = new Evt());\n    this.evt.subscribe(...arguments);\n};\n\nFieldPrototype.prototype.emit = function () {\n    this.evt && this.evt.trigger(...arguments);\n};\nmodule.exports                = function defineField(conf) {\n    function F(value, isValid) {\n        debugger;\n        if (value === undefined) {\n            this.required?value = this.defaultValue:isValid=true;\n        }\n        if (isValid === undefined) {\n            //值不能为空\n            if (this.required && value === undefined) {\n                isValid = false;\n            } else {\n                if ((value === undefined && !this.required) || (this.defaultValue === value)) isValid = true;\n            }\n        }\n\n        Object.defineProperty(this, \"value\", new Destor(Array.isArray(value) ? wrapArr(value, this) : value));\n        this.isValid    = isValid;\n        this.isModified = false;\n        let validateFn  = debounce(this.validate, 100, {immediate: true, promise: true});\n        let validCache;\n        this.validate   = function (flag) {\n            //flag表示可以利用上一次的验证结果；\n            if (flag === true&&validCache) return validCache.then?validCache:Promise.resolve(validCache);\n            let valid  = validateFn.call(this, this.value);\n            validCache = valid.then((val) => {\n                validCache = val;\n                return __.call(this, val);\n            });\n            return validCache;\n        }\n    }\n\n    F.prototype             = new FieldPrototype(conf);\n    F.prototype.constructor = F;\n    Object.defineProperty(F, \"name\", {value: conf.name});\n    F.isField = true;\n    return F;\n};\n","module.exports.field=require('./field');\nmodule.exports.model=require('./model');\n// export model from './model';\n","let defineField   = require(\"./field\");\nlet Evt           = require(\"../assets/evt\");\nlet debounce      = require(\"../assets/throttle\").debounce;\nlet {has, notAll} = require(\"../assets/object\");\n\n/**\n *\n * @param fieldsCfg\n * @constructor\n */\nfunction ModelPrototype(fieldsCfg) {\n    Object.defineProperty(this, \"fields\", {\n        value   : [],\n        writable: true\n    });\n    let fields = [];\n    for (let field of fieldsCfg) {\n        if (!field.isField && !field.isModel) {\n            field = field.fields ? defineModel(field) : defineField(field)\n        }\n        fields.push(field);\n    }\n    this.fields = fields;\n    return this;\n}\n\n/**\n *\n */\nModelPrototype.prototype.emit = function () {\n    this.evt && this.evt.trigger(...arguments);\n};\n/**\n *\n */\nModelPrototype.prototype.on = function () {\n    this.evt || (Object.defineProperty(this, \"evt\", {value: new Evt()}));\n    this.evt.subscribe(...arguments);\n};\n\n\n/**\n *\n * @param validateAll undefined,false,true\n * @return {Promise<any[]>}\n */\nModelPrototype.prototype.validate = function (validateAll) {\n    let ths       = this,\n        fieldData = ths.fieldData,\n        varr      = [],\n        fields    = Object.keys(fieldData);\n    for (let fieldName of fields) {\n        let field = fieldData[fieldName];\n        // if (field.isField && field.isValid !== undefined && !field.validate.ing) continue;\n        // tmp            = field.isValid;\n        let tmp = field.validate(true);\n        varr.push(tmp);\n    }\n    return Promise.all(varr).then((ret) => {\n        let isValid = !notAll(ths.validation, true);\n        if (isValid !== ths.isValid) {\n            ths.ref && (ths.ref.validation[ths.name] = isValid);\n            ths.emit(\"validChg\", isValid);\n            ths.ref && ths.ref.emit('fieldValidChg', ths.name, isValid);\n        }\n        ths.isValid = isValid;\n        return ths.isValid;\n    });\n};\n\nModelPrototype.prototype.isModel = true;\n\n\n/**\n *\n * @param arg\n */\nfunction getFieldAlias(arg) {\n    let ret    = {}, field,\n        fields = this.prototype.fields;\n    if (arg) {\n        for (let field of fields)\n            if (field.name === arg)\n                return field.prototype.isField ? field.prototype.alias : field.getAlias()\n    } else {\n        for (let field of fields)\n            ret[field.name] = field.prototype.isField ? field.prototype.alias : field.getAlias();\n    }\n    return ret;\n}\n\nfunction fieldValidChgHandler(ctx) {\n    let _ = debounce(\n        function (isValid, validation) {\n            isValid && (isValid = !notAll(validation, true));\n            if (isValid === ctx.isValid) return;\n            ctx.isValid = isValid;\n            ctx.emit(\"validChg\", isValid);\n            ctx.ref && ctx.ref.emit(\"fieldValidChg\", ctx.constructor.name, isValid);\n            return isValid;\n        }, 80, {promise: true}\n    );\n    return function (fieldName, isValid) {\n        ctx.validation[fieldName] = isValid;\n        if (isValid === ctx.isValid) return;\n        if (isValid === true) {\n            _(isValid, ctx.validation)\n        } else {\n            ctx.isValid = false;\n            ctx.ref && ctx.ref.emit(\"fieldValidChg\", ctx.constructor.name, false);\n            ctx.emit(\"validChg\", isValid);\n        }\n    }\n}\n\nfunction fieldModChgHandler(ctx) {\n    let _ = debounce(\n        function (modified) {\n            let isMod = has(modified, true);\n            if (isMod === ctx.isModified) return;\n            ctx.isModified = isMod;\n            ctx.ref&&ctx.ref.emit(\"fieldModChg\", ctx.name, ctx.isModified);\n            // if (ctx.ref) {\n            // ctx.ref.modified[ctx.name] = true;\n            // }\n            ctx.emit(\"modChg\", ctx.isModified);\n            return isMod;\n        }, 80, {promise: true}\n    );\n    return function (fieldName, isMod) {\n        ctx.modified[fieldName] = isMod;\n        if (isMod === ctx.isModified) return;\n        if(isMod===true){\n            // if (ctx.ref) {\n            // ctx.ref.modified[ctx.name] = true;\n            // }\n            ctx.ref&&ctx.ref.emit(\"fieldModChg\", ctx.name, ctx.isModified);\n            ctx.emit(\"modChg\", true);\n        }else{\n            _(ctx.modified)\n        }\n        // if (isMod !== ctx.isModified) isMod ? ctx.isModified = true : _(ctx.modified);\n    }\n}\n\n/**\n *\n * @param cfg\n * @return {M}\n * @constructor\n */\nfunction defineModel(cfg) {\n    let fields  = cfg.fields || cfg;\n    /**\n     *\n     * @param data\n     * @param isValid\n     * @private\n     */\n    let _       = function (data, isValid) {\n        let flag         = data ? Array.isArray(data) : data = {},\n            modified     = {},\n            dataObj      = {},\n            fieldData    = {},\n            valueChgFlag = {},\n            validateFlag = 0,\n            fields       = this.fields;\n        this.validation  = {};\n        this.isModified  = false;\n        for (let idx = 0, len = fields.length; idx < len; idx++) {\n            let field,\n                fieldCls           = fields[idx],\n                fname              = fieldCls.name,\n                initVal            = flag ? data[idx] : data[fname];\n            field                  = new fieldCls(initVal, isValid);\n            field.ref              = this;\n            field.idx              = idx;\n            modified[fname]        = false;\n            fieldData[fname]       = field;\n            this.validation[fname] = field.isModel ? field.validation : field.isValid;\n            if (isValid === undefined && !field.isValid) validateFlag = validateFlag | (field.isValid === false ? 1 : 2);\n            Object.defineProperty(dataObj, fname, {\n                set         : function (value) {\n                    if (valueChgFlag[fname]) {\n                        return delete valueChgFlag[fname]\n                    }\n                    field.value = value;\n                },\n                get         : () => field.value,\n                enumerable  : true,\n                configurable: true\n            });\n        }\n        this.fieldData = fieldData;\n        if (isValid === undefined) {\n            this.isValid = validateFlag ? (validateFlag & 1 ? false : undefined) : true;\n        } else {\n            this.isValid = isValid;\n        }\n        Object.defineProperty(this, \"modified\", {value: modified});\n        Object.defineProperty(this, \"value\", {\n            get         : () => dataObj,\n            set         : function (data) {\n                for (let name in data) {\n                    if (!data.hasOwnProperty(name)) continue;\n                    let field = this.fieldData[name];\n                    field && (field.value = data[name]);\n                }\n            },\n            enumerable  : true,\n            configurable: true\n        });\n        this.on(\"fieldValidChg\", fieldValidChgHandler(this));\n        this.on(\"fieldModChg\", fieldModChgHandler(this));\n        this.on(\"fieldValueChg\", (fname, value) => {\n            valueChgFlag[fname] = true;\n            dataObj[fname]      = value;\n        });\n        this.validate = debounce(this.validate, 100, {immediate: true, promise: true});\n    };\n    _.prototype = new ModelPrototype(fields);\n    cfg.name && Object.defineProperty(_, \"name\", {value: cfg.name});\n    _.prototype.constructor = _;\n    _.getAlias              = getFieldAlias;\n    return _;\n}\n\nmodule.exports = defineModel;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpzsourceRoot":""}